const express = require('express');
const router = express.Router();
const db = require('../server'); // Import the database connection

// Get all messages
router.get('/messages', async (req, res) => {
    const query = 'SELECT * FROM message'; 

    try {
        const [results] = await db.query(query);
        res.json(results); 
    } catch (err) {
        res.status(500).json({ error: err.message });
    }
});

// Get messages for a specific user
router.get('/messages/:userId', async (req, res) => {
    const query = `
        SELECT * 
        FROM message 
        WHERE SenderID = ? OR ReceiverID = ? 
        ORDER BY SentAt DESC
    `;

    try {
        const [results] = await db.query(query, [req.params.userId, req.params.userId]);
        res.json(results);
    } catch (err) {
        res.status(500).json({ error: err.message });
    }
});

// Send a new message
router.post('/messages', async (req, res) => {
    const { sender, text, userId } = req.body;

    // Validate input
    if (!sender || !text || !userId) {
        console.log("Validation Failed", req.body);
        return res.status(400).json({ error: 'Missing required fields: sender, text, userId' });
    }

    const query = 'INSERT INTO message (SenderID, MessageText, ReceiverID) VALUES (?, ?, ?)';

    try {
        console.log("Query Parameters:", sender, text, userId);
        const [result] = await db.query(query, [sender, text, userId]);
        console.log("Query Result:", result);
        res.status(201).json({ message: 'Message sent', messageId: result.insertId });
    } catch (err) {
        console.error("Database Error:", err);
        res.status(500).json({ error: err.message });
    }
});

// Delete a message
router.delete('/messages/:id', async (req, res) => {
    const query = 'DELETE FROM message WHERE MessageID = ?';

    try {
        const [result] = await db.query(query, [req.params.id]);
        if (result.affectedRows === 0) {
            return res.status(404).json({ error: 'Message not found' });
        }
        res.json({ message: 'Message deleted' });
    } catch (err) {
        res.status(500).json({ error: err.message });
    }
});

module.exports = router; 
